<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="model">

	<xacro:property name = "base_mass" value = "1.0"/>
	<xacro:property name = "base_height" value = "0.05"/>
	<xacro:property name = "base_radius" value = "0.1"/>

	<xacro:property name = "mount_height" value = "0.2"/>
	<xacro:property name = "mount_length" value = "0.05"/>
	<xacro:property name = "mount_width" value = "0.02"/>
	<xacro:property name = "mount_mass" value = "0.5"/>

	<xacro:property name = "elbow_mass" value = "0.5"/>
	<xacro:property name = "elbow_width" value = "0.02"/>
	<xacro:property name = "elbow_height" value = "0.05"/>
	<xacro:property name = "elbow_length" value = "0.15"/>

	<xacro:property name = "scope_mass" value = "0.1"/>
	<xacro:property name = "scope_length" value = "0.1"/>
	<xacro:property name = "scope_radius" value = "0.015"/>


	<link name = "world"/>
	<link name = "base_link">
		<inertial> 
			<mass value = "${base_mass}"/>
			<origin xyz = "0 0 0" rpy = "0 0 0"/> 
			<inertia ixx = "0.0" 
				 	 ixy = "0.0" 
				 	 ixz = "0.0"
				  	 iyy = "0.0" 
				 	 iyz = "0.0" 
				  	 izz="0.0"/>
		</inertial>

		<visual name = "base_link_visual">
			<origin xyz = "0 0 0" rpy = "0 0 0" />
			<geometry>
				<cylinder length = "${base_height}" radius = "${base_radius}"/>
			</geometry>
		</visual>

		<collision name = "base_link_collision">
			<origin xyz = "0 0 0" rpy = "0 0 0"/>
			<geometry>
				<cylinder length = "${base_height}" radius = "${base_radius}"/>
			</geometry>
		</collision>
	</link>


	<link name = "mount_link">
		<inertial>
			<mass value="${mount_mass}"/>
				<origin xyz = "${base_radius + mount_width/2} 0 ${-mount_height/2+base_height/2}" />
			<inertia ixx = "0.0"
					 ixy = "0.0"
					 ixz = "0.0"
				     iyy = "0.0"
					 iyz = "0.0"
					 izz = "0.0"/>
		</inertial>

		<visual name = "mount_link_visual">
			<origin xyz = "${base_radius + mount_width/2} 0 ${-mount_height/2+base_height/2} "/>
			<geometry>
				<box size = "${mount_width} ${mount_length} ${mount_height}"/>
			</geometry>
		</visual>

		<collision name = "mount_link_collision">
			<origin xyz = "${base_radius + mount_width/2} 0 ${-mount_height/2+base_height/2}"/>
			<geometry>
				<box size = "${mount_width} ${mount_length} ${mount_height}"/>
			</geometry>
		</collision>
	</link>


	<link name = "elbow_link">
		<inertial>
			<mass value = "${elbow_mass}"/>
				<origin xyz = "${mount_length} 0 0 "/>
			<inertia ixx = "0.0"
					 ixy = "0.0"
					 ixz = "0.0"
					 iyy = "0.0"
					 iyz = "0.0"
					 izz = "0.0"/>
			</inertial>

		<visual name = "elbow_link_visual">
			<origin xyz = "${-mount_width/2} ${mount_length} 0" />
			<geometry> 
				<box size = "${elbow_width} ${elbow_length} ${elbow_height}"/>
			</geometry>
		</visual>

		<visual name = "second_elbow_link_visual">
			<origin xyz = "${-0.5*elbow_length} ${elbow_length - elbow_width} 0" rpy = "0 0 ${-pi/2}"/>
			<geometry> 
				<box size = "${elbow_width} ${elbow_length} ${elbow_height}"/>
			</geometry>
		</visual>

		<collision name = "elbow_link_collsion">
			<origin xyz = "${-mount_width/2} ${mount_length} 0" />
			<geometry> 
				<box size = "${elbow_width} ${elbow_length} ${elbow_height}"/>
			</geometry>
		</collision>

		<collision name = "second_elbow_link_collision">
			<origin xyz = "${-0.5*elbow_length} ${elbow_length - elbow_width} 0" rpy = "0 0 ${-pi/2}"/>
			<geometry> 
				<box size = "${elbow_width} ${elbow_length} ${elbow_height}"/>
			</geometry>
		</collision>

	</link>

	<link name = "scope_link">
		<inertial>
			<mass value = "${scope_mass}"/>
				<origin xyz = "${mount_length} 0 0 "/>
			<inertia ixx = "0.0"
					 ixy = "0.0"
					 ixz = "0.0"
					 iyy = "0.0"
					 iyz = "0.0"
					 izz = "0.0"/>
			</inertial>

		<visual name = "scope_link_visual">
			<origin xyz = "${-mount_width/2} -${mount_length-mount_width} 0" rpy = "${pi/2} 0 0" />
			<geometry> 
				<cylinder length = "${scope_length}" radius = "${scope_radius}"/>
			</geometry>
		</visual>

		<collision name = "scope_link_collision">
			<origin xyz = "${-mount_width/2} -${mount_length-mount_width} 0" rpy = "${pi/2} 0 0" />
			<geometry> 
				<cylinder length = "${scope_length}" radius = "${scope_radius}"/>
			</geometry>
		</collision>
	</link>


	<joint name = "roll_joint" type = "revolute">
		<parent link = "elbow_link" />
		<child link = "scope_link" />
		<origin xyz = "${-base_radius} ${base_radius} 0" rpy="0 0 0"/>
		<axis xyz = "0 1 1" />
		<limit lower="${-pi/4}" upper="${pi/4}" effort="1000.0" velocity="10.0"/>
	</joint>

	<joint name = "pitch_joint" type = "revolute">
		<parent link = "mount_link" />
		<child link = "elbow_link" />
		<origin xyz = "${base_radius} 0 ${-mount_height+elbow_height/2+base_height/2}" rpy="0 0 0"/>
		<axis xyz = "1 0 0" />
		<limit lower="${-pi/4}" upper="${pi/4}" effort="1000.0" velocity="10.0"/>
	</joint>

	<joint name = "yaw_joint" type = "continuous">
		<parent link = "base_link" />
		<child link = "mount_link" />
		<axis xyz = "0 0 1" />
	</joint>

	<joint name="world_joint" type="fixed">
		<parent link="world"/>
		<child link="base_link"/>
		<origin xyz = "0 0 1" rpy = "0 0 0"/>
	</joint>

	<transmission name="pitch_transmission">
		<type>transmission_interface/SimpleTransmission</type>
		
		<joint name="pitch_joint">
			<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
		</joint>

		<actuator name="pitch_motor">
			<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
			<mechanicalReduction>1</mechanicalReduction>
		</actuator>
	</transmission>

	<transmission name="yaw_transmission">
		<type>transmission_interface/SimpleTransmission</type>
		
		<joint name="yaw_joint">
			<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
		</joint>

		<actuator name="yaw_motor">
			<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
			<mechanicalReduction>1</mechanicalReduction>
		</actuator>
	</transmission>

	<transmission name="roll_transmission">
		<type>transmission_interface/SimpleTransmission</type>
		
		<joint name="roll_joint">
			<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
		</joint>

		<actuator name="roll_motor">
			<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
			<mechanicalReduction>1</mechanicalReduction>
		</actuator>
	</transmission>

	<gazebo>
		<static>false</static>
		<plugin name = "gazebo_ros_control" filename = "libgazebo_ros_control.so">
			<robotNamespace>/model</robotNamespace>
		</plugin>
	</gazebo>

</robot>